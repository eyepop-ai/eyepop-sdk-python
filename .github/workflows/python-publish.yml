# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]

  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 2.1.0rc1, 2.1.0a1, 2.1.0b2)'
        required: true
        type: string
      publish_to_pypi:
        description: 'Publish to PyPI (vs TestPyPI)'
        required: true
        type: boolean
        default: false

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build package
      env:
        SETUPTOOLS_SCM_PRETEND_VERSION: ${{ github.event.inputs.version }}
      run: python -m build

    - name: Display version
      run: |
        pip install dist/*.whl
        python -c "import eyepop; print(f'Built version: {eyepop.__version__}')"

    - name: Test package
      run: |
        pip install -e .[test]
        python -m pytest

    - name: Publish to PyPI
      if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'true')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Publish to TestPyPI
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.publish_to_pypi == 'false'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
